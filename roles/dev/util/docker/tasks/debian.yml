---

#################################################################

- name: "mkdirs"
  file:
    dest: "/etc/docker"
    state: "directory"
    owner: "{{ root_user.id }}"
    group: "{{ root_user.id }}"
    mode: 0755
  tags:
    - "{{ docker.tags }}"

#################################################################

- name: "apt > install > prereq"
  apt:
    name    : "{{ docker.libraries.apt_prereq }}"
    state   : "latest"
  tags:
    - "{{ docker.tags }}"

#################################################################

- name: "apt > key"
  when: not proxy | bool
  apt_key:
    url           : "{{ docker.key_server }}"
    id            : "{{ docker.key_id     }}"
    state         : "present"
  tags:
    - "{{ docker.tags }}"
    - "proxy"

- name: "apt > repo"
  when: not proxy | bool
  apt_repository:
    repo          : "{{ docker.repo }}"
    state         : "present"
  tags:
    - "{{ docker.tags }}"
    - "proxy"

- name: "apt > key"
  become: yes
  become_user: "{{ primary_user.id }}"
  when: proxy | bool
  shell: "sudo -E curl -fsSL {{ docker.key_server }} | sudo -E apt-key add -"
  tags:
    - "{{ docker.tags }}"
    - "proxy"

- name: "apt > repo"
  become: yes
  become_user: "{{ primary_user.id }}"
  when: proxy | bool
  shell: "sudo -E add-apt-repository \"{{ docker.repo }}\" -y"
  tags:
    - "{{ docker.tags }}"
    - "proxy"

- name: "apt > install"
  apt:
    name          : "{{ docker.libraries.apts }}"
    state         : "latest"
    update_cache  : "yes"
  tags:
    - "{{ docker.tags }}"

#################################################################

- name: "config > mkdirs"
  with_items:
    - "{{ all_users }}"
  file:
    name    : "{{ item.home }}/.docker"
    owner   : "{{ item.id   }}"
    group   : "{{ item.id   }}"
    state   : "directory"
  tags:
    - "{{ docker.tags }}"
    - "proxy"

- name: "config > properties"
  with_items:
    - "{{ all_users }}"
  template:
    src     : "config.json.j2"
    dest    : "{{ item.home }}/.docker/config.json"
    owner   : "{{ item.id   }}"
    group   : "{{ item.id   }}"
  register: docker_config
  tags:
    - "{{ docker.tags }}"
    - "proxy"

- name: "config > service > mkdirs"
  file:
    name    : "/etc/systemd/system/docker.service.d/"
    owner   : "{{ root_user.id }}"
    group   : "{{ root_user.id }}"
    state   : "directory"
  tags:
    - "{{ docker.tags }}"
    - "proxy"

- name: "config > service > properties"
  template:
    src     : "http-proxy.conf.j2"
    dest    : "/etc/systemd/system/docker.service.d/http-proxy.conf"
    owner   : "{{ root_user.id }}"
    group   : "{{ root_user.id }}"
  register: docker_config
  tags:
    - "{{ docker.tags }}"
    - "proxy"

#################################################################

- name: "insecure registries"
  template:
    src     : "daemon.json.j2"
    dest    : "/etc/docker/daemon.json"
    owner   : "{{ root_user.id }}"
    group   : "{{ root_user.id }}"
  register: docker_config
  tags:
    - "{{ docker.tags }}"

#################################################################

- name: "service > restart"
  when:
    - proxy | bool
    - docker_config is defined
    - docker_config.changed
  service:
    name  : "docker"
    state : "restarted"
  tags:
    - "{{ docker.tags }}"

#################################################################

- name: "group"
  user:
    name          : "{{ primary_user.id }}"
    groups        : "docker"
    append        : "yes"
  tags:
    - "{{ docker.tags }}"

#################################################################

- name: "install > docker-compose"
  get_url:
    url     : "{{ docker.compose.url  }}"
    dest    : "{{ docker.compose.dest }}"
    mode    : "755"
  tags:
    - "{{ docker.tags }}"

#################################################################

- name: "images > install"
  become: yes
  with_items:
    - "{{ docker_images }}"
  docker_image:
    name          : "{{ item.name }}"
    tag           : "{{ item.version }}"
    source        : "pull"
  tags:
    - "{{ docker.tags }}"

#################################################################

