---

- name: "Check Ansible Version >= {{ min_ansible_version }}"
  assert:
    that: "ansible_version.full is version_compare('{{ min_ansible_version }}', '>=')"
    msg : "You must be running at least version {{ min_ansible_version }}"
  tags: [ "always" ]

- name: "Collect Additional Facts"
  with_items:
    - { k: "dist_family",         v: "{{ ansible_os_family                                    | default() | lower }}" }
    - { k: "dist_os",             v: "{{ ansible_distribution                                 | default() | lower }}" }
    - { k: "dist_os_release",     v: "{{ ansible_distribution_release                         | default() | lower }}" }
    - { k: "dist_os_version",     v: "{{ ansible_distribution_version                         | default() | lower }}" }
    - { k: "desktop_environment", v: "{{ lookup('env', 'XDG_CURRENT_DESKTOP').split(':')[-1]  | default() | lower }}" }
    - { k: "vm_type",             v: "{{ ansible_virtualization_role       | replace('NA','') | default() | lower }}" }
  set_fact:
    "{{ item.k }}": "{{ item.v }}"
  tags: [ "always" ]

- name: "Collect Additional Facts > Boolean"
  with_items:
    - { k: "gui",                 v: "{{ 'True' if desktop_environment != '' or dist_family == 'windows' else 'False' }}" }
    - { k: "vm",                  v: "{{ 'True' if vm_type != ''             else 'False' }}" }
  set_fact:
    "{{ item.k }}": "{{ item.v }}"
  tags: [ "always" ]

- name: "Gathered Facts"
  with_items:
    - { k: "OS Family   ", v: "{{ dist_family         }}" }
    - { k: "OS          ", v: "{{ dist_os             }}" }
    - { k: "OS Release  ", v: "{{ dist_os_release     }}" }
    - { k: "OS Version  ", v: "{{ dist_os_version     }}" }
    - { k: "GUI?        ", v: "{{ gui                 }}" }
    - { k: "GUI Env     ", v: "{{ desktop_environment }}" }
    - { k: "VM?         ", v: "{{ vm                  }}" }
    - { k: "VM Env      ", v: "{{ vm_type             }}" }
  debug:
    msg: "{{ item.k }} : {{ item.v }}"
  tags: [ "always" ]

